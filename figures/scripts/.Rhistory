setwd('../figures/scripts/')
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=14)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 3
#Read in performance statistics
ggplot_results<-read.table("../data/Figure3.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1", "F1", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2), spearmans_graph,nrmse_graph,
nrow = 2,
ncol = 2,
labels = c("A","","B", "C")
)
ggsave("../pdfs/Figure3.pdf", plot=last_plot(), height= 225, width=170, units=c("mm"))
ggsave("../pngs/Figure3.png", plot=last_plot(), height= 225, width=170, units=c("mm"))
ggsave("../pdfs/Figure3.pdf", plot=last_plot(), height= 225, width=170, units=c("mm"))
ggsave("../pngs/Figure3.png", plot=last_plot(), height= 225, width=170, units=c("mm"))
rm(list=ls())
#QC script
library(ggplot2)
library(ggpubr)
library(scater, quietly = TRUE)
library(knitr)
library(SingleCellExperiment)
options(stringsAsFactors = FALSE)
############################################################
# READS AND ALIGNMENT QC PLOTS
QC_sim<-read.table("../data/SupplementaryFigure13_reads_alignment_data.txt")
#Alignment based QC plots
Unique<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unique), y=Unique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() +xlab(" ") + ggtitle("\nNumber of Uniquely Mapping Reads")
Unique<-Unique + geom_hline(yintercept=15000/1000, color='red', linetype='dashed')
NonUnique<-ggplot(data=QC_sim, aes(x=reorder(Filename,NonUnique), y=NonUnique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("Number of Non-Uniquely Mapping Reads")
NonUnique<-NonUnique + geom_hline(yintercept=3000/1000, color='red', linetype='dashed')
Unmapped<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unmapped), y=Unmapped)) + geom_point(stat="identity") + ylab("Number of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + ylim(0,100) + xlab(" ") + ggtitle("Number of Unmapped Reads")
NumAlign<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumAlignments), y=NumAlignments/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Alignments")
NumAlign<-NumAlign + geom_hline(yintercept=25000/1000, color='red', linetype='dashed')
#Read number based QC plot
NumReads<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumReads), y=NumReads/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_text(size=14)) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Reads")
NumReads<-NumReads + geom_hline(yintercept=20000/1000, color='red', linetype='dashed')
#############################################################
# MT READS QC PLOT
load("../data/SupplementaryFigure13_scater_object.RData")
mt_reads<-scater::plotPhenoData(
dropseq_scater_QC,
aes_string(x = "total_features",
y = "pct_counts_feature_controls_MT",
colour = "batch")
)
# make final figure
ggarrange(mt_reads, NumReads, NumAlign, Unique, NonUnique, Unmapped, ncol = 2,nrow=3, labels = c("A","B","C","D","E","F"))
ggsave("../pdfs/SupplementaryFigure13.pdf", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
ggsave("../pngs/SupplementaryFigure13.png", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
mt_reads<-scater::plotPhenoData(
dropseq_scater_QC,
aes_string(x = "total_features",
y = "pct_counts_MT",
colour = "batch")
)
rm(list=ls())
#QC script
library(ggplot2)
library(ggpubr)
library(scater, quietly = TRUE)
library(knitr)
library(SingleCellExperiment)
options(stringsAsFactors = FALSE)
############################################################
# READS AND ALIGNMENT QC PLOTS
QC_sim<-read.table("../data/SupplementaryFigure13_reads_alignment_data.txt")
#Alignment based QC plots
Unique<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unique), y=Unique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() +xlab(" ") + ggtitle("\nNumber of Uniquely Mapping Reads")
Unique<-Unique + geom_hline(yintercept=15000/1000, color='red', linetype='dashed')
NonUnique<-ggplot(data=QC_sim, aes(x=reorder(Filename,NonUnique), y=NonUnique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("Number of Non-Uniquely Mapping Reads")
NonUnique<-NonUnique + geom_hline(yintercept=3000/1000, color='red', linetype='dashed')
Unmapped<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unmapped), y=Unmapped)) + geom_point(stat="identity") + ylab("Number of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + ylim(0,100) + xlab(" ") + ggtitle("Number of Unmapped Reads")
NumAlign<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumAlignments), y=NumAlignments/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Alignments")
NumAlign<-NumAlign + geom_hline(yintercept=25000/1000, color='red', linetype='dashed')
#Read number based QC plot
NumReads<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumReads), y=NumReads/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_text(size=14)) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Reads")
NumReads<-NumReads + geom_hline(yintercept=20000/1000, color='red', linetype='dashed')
#############################################################
# MT READS QC PLOT
load("../data/SupplementaryFigure13_scater_object.RData")
mt_reads<-scater::plotPhenoData(
dropseq_scater_QC,
aes_string(x = "total_features",
y = "pct_counts_MT",
colour = "batch")
)
# make final figure
ggarrange(mt_reads, NumReads, NumAlign, Unique, NonUnique, Unmapped, ncol = 2,nrow=3, labels = c("A","B","C","D","E","F"))
ggsave("../pdfs/SupplementaryFigure13.pdf", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
ggsave("../pngs/SupplementaryFigure13.png", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
rm(list=ls())
#QC script
library(ggplot2)
library(ggpubr)
library(scater, quietly = TRUE)
library(knitr)
library(SingleCellExperiment)
options(stringsAsFactors = FALSE)
############################################################
# READS AND ALIGNMENT QC PLOTS
QC_sim<-read.table("../data/SupplementaryFigure14_reads_alignment_data.txt")
#Alignment based QC plots
Unique<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unique), y=Unique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() +xlab(" ") + ggtitle("\nNumber of Uniquely Mapping Reads")
Unique<-Unique + geom_hline(yintercept=1000/1000, color='red', linetype='dashed')
NonUnique<-ggplot(data=QC_sim, aes(x=reorder(Filename,NonUnique), y=NonUnique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("Number of Non-Uniquely Mapping Reads")
NonUnique<-NonUnique + geom_hline(yintercept=500/1000, color='red', linetype='dashed')
Unmapped<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unmapped), y=Unmapped)) + geom_point(stat="identity") + ylab("Number of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + ylim(0,100) + xlab(" ") + ggtitle("Number of Unmapped Reads")
NumAlign<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumAlignments), y=NumAlignments/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Alignments")
NumAlign<-NumAlign + geom_hline(yintercept=1000/1000, color='red', linetype='dashed')
#Read number based QC plot
NumReads<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumReads), y=NumReads/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_text(size=14)) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Reads")
#############################################################
# MT READS QC PLOT
load("../data/SupplementaryFigure14_scater_object.RData")
mt_reads<-scater::plotPhenoData(
dropseq_scater_QC,
aes_string(x = "total_features",
y = "pct_counts_MT",
colour = "batch")
)
# make final figure
ggarrange(mt_reads, NumReads, NumAlign, Unique, NonUnique, Unmapped, ncol = 2,nrow=3, labels = c("A","B","C","D","E","F"))
ggsave("../pdfs/SupplementaryFigure14.pdf", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
ggsave("../pngs/SupplementaryFigure14.png", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
rm(list=ls())
library(ggplot2)
library(ggpubr)
#read in data
ground_truth_expr<-read.table(gzfile("../data/SupplementaryFigure15.gz"))
#plot data and save
graph<-ggplot(data=ground_truth_expr, aes(x=estimates)) + geom_histogram(binwidth = 10)  +coord_cartesian(ylim=c(0, 100000), xlim=c(0,1500)) + xlab("100 x log2(Ground Truth Expression in TPM + 1)") + ylab("Frequency of Isoforms")
graph
ggsave("../pdfs/SupplementaryFigure15.pdf", plot=last_plot())
ggsave("../pngs/SupplementaryFigure15.png", plot=last_plot())
rm(list=ls())
#QC script
library(ggplot2)
library(ggpubr)
library(scater, quietly = TRUE)
library(knitr)
library(SingleCellExperiment)
options(stringsAsFactors = FALSE)
############################################################
# READS AND ALIGNMENT QC PLOTS
QC_sim<-read.table("../data/SupplementaryFigure13_reads_alignment_data.txt")
#Alignment based QC plots
Unique<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unique), y=Unique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() +xlab(" ") + ggtitle("\nNumber of Uniquely Mapping Reads")
Unique<-Unique + geom_hline(yintercept=15000/1000, color='red', linetype='dashed')
NonUnique<-ggplot(data=QC_sim, aes(x=reorder(Filename,NonUnique), y=NonUnique/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("Number of Non-Uniquely Mapping Reads")
NonUnique<-NonUnique + geom_hline(yintercept=3000/1000, color='red', linetype='dashed')
Unmapped<-ggplot(data=QC_sim, aes(x=reorder(Filename,Unmapped), y=Unmapped)) + geom_point(stat="identity") + ylab("Number of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + ylim(0,100) + xlab(" ") + ggtitle("Number of Unmapped Reads")
NumAlign<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumAlignments), y=NumAlignments/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Alignments")
NumAlign<-NumAlign + geom_hline(yintercept=25000/1000, color='red', linetype='dashed')
#Read number based QC plot
NumReads<-ggplot(data=QC_sim, aes(x=reorder(Filename,NumReads), y=NumReads/1000)) + geom_point(stat="identity") + ylab("Thousands of Reads") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_text(size=14)) + scale_x_discrete() + xlab(" ") + ggtitle("\nNumber of Reads")
NumReads<-NumReads + geom_hline(yintercept=20000/1000, color='red', linetype='dashed')
#############################################################
# MT READS QC PLOT
load("../data/SupplementaryFigure13_scater_object.RData")
mt_reads<-scater::plotPhenoData(
dropseq_scater_QC,
aes_string(x = "total_features",
y = "pct_counts_MT",
colour = "batch")
)
# make final figure
ggarrange(mt_reads, NumReads, NumAlign, Unique, NonUnique, Unmapped, ncol = 2,nrow=3, labels = c("A","B","C","D","E","F"))
ggsave("../pdfs/SupplementaryFigure13.pdf", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
ggsave("../pngs/SupplementaryFigure13.png", plot=last_plot(),height = (6.04*1.5), width=(8.57*1.5))
